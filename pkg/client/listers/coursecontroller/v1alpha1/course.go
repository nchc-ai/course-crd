// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/nchc-ai/course-crd/pkg/apis/coursecontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CourseLister helps list Courses.
// All objects returned here must be treated as read-only.
type CourseLister interface {
	// List lists all Courses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Course, err error)
	// Courses returns an object that can list and get Courses.
	Courses(namespace string) CourseNamespaceLister
	CourseListerExpansion
}

// courseLister implements the CourseLister interface.
type courseLister struct {
	indexer cache.Indexer
}

// NewCourseLister returns a new CourseLister.
func NewCourseLister(indexer cache.Indexer) CourseLister {
	return &courseLister{indexer: indexer}
}

// List lists all Courses in the indexer.
func (s *courseLister) List(selector labels.Selector) (ret []*v1alpha1.Course, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Course))
	})
	return ret, err
}

// Courses returns an object that can list and get Courses.
func (s *courseLister) Courses(namespace string) CourseNamespaceLister {
	return courseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CourseNamespaceLister helps list and get Courses.
// All objects returned here must be treated as read-only.
type CourseNamespaceLister interface {
	// List lists all Courses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Course, err error)
	// Get retrieves the Course from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Course, error)
	CourseNamespaceListerExpansion
}

// courseNamespaceLister implements the CourseNamespaceLister
// interface.
type courseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Courses in the indexer for a given namespace.
func (s courseNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Course, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Course))
	})
	return ret, err
}

// Get retrieves the Course from the indexer for a given namespace and name.
func (s courseNamespaceLister) Get(name string) (*v1alpha1.Course, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("course"), name)
	}
	return obj.(*v1alpha1.Course), nil
}
